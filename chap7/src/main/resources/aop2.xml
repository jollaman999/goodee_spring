<?xml version="1.0" encoding="utf-8" ?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:p="http://www.springframework.org/schema/p"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:aop="http://www.springframework.org/schema/aop"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
                            http://www.springframework.org/schema/beans/spring-beans.xsd
                            http://www.springframework.org/schema/aop
                            http://www.springframework.org/schema/aop/spring-aop.xsd">
    <bean id="loggingAdvice" class="xml.LoggingAdvice" />
    <bean id="cacheAdvice" class="xml.ArticleCacheAdvice" />
    <bean id="traceAdvice" class="xml.UpdateMemberInfoTraceAdvice" />
<!--    <bean id="traceAdvice" class="xml.UpdateMemberInfoTraceAdvice" />-->
    <!-- AOP 클래스 설정 -->
    <aop:config>
        <aop:aspect id="loggingAspect" ref="loggingAdvice" order="3">
            <!-- 핵심 메서드 설정 : xml 패키기지의 모든 클래스의 public 메서드를 설정 -->
            <aop:pointcut id="publicMethod" expression="execution(public * xml..*(..))" />
            <!-- Advice 설정 시작 -->
            <!-- method="before" : pointcut에 설정된 메서드 실행 전에  loggingAdvice 객체의 before 메서드를 호출 -->
            <aop:before method="before" pointcut-ref="publicMethod" />

            <aop:after-returning method="afterReturning" pointcut-ref="publicMethod" returning="ret" />
            <aop:after-throwing method="afterThrowing" pointcut-ref="publicMethod" throwing="ex" />
            <aop:after method="afterFinally" pointcut-ref="publicMethod" />
            <!-- Advice 설정 종료 -->
        </aop:aspect>
        <aop:aspect id="cacheAspect" ref="cacheAdvice" order="2">
            <aop:around method="cache" pointcut="execution(public * *..ReadArticleServiceImpl.*(..))" />
        </aop:aspect>
        <aop:aspect id="traceAspect" ref="traceAdvice" order="1">
            <aop:after-returning method="traceReturn" pointcut="args(memberId, info)" returning="result" arg-names="result, memberId, info" />
        </aop:aspect>
    </aop:config>
</beans>